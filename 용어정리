@RestController vs @Controller ?

가장 큰 차이는 ResponseBody가 생성되냐 안되냐. Rest는 생성된다.
따라서 return했을 때 RestController는 return값이 그대로 실행되고 Controller는 return에 .jsp(jsp가 기본자였을때)가 실행
예를 들어
@RestController
public class User {
  @GetMapping("/hi")
  public String hi() {
    return "hi";
    }
}
이 경우 localhost/hi 에 접속하면
RestController는 hi가 화면에 나오지만 Controller는 hi.jsp가 실행되고 hi.jsp가 없으면 오류가 발생한다.



그럼 여기서 RequestBody가 무엇인가??
우선 Http 요청 몸체를 자바 객체로 변환시켜 준다 고 생각한다.
 <-> ResponseBody는 자바 객체를 Http 응답 몸체로 변환하는데 사용한다.

ResponseEntity, RequestEntity란 무엇인가?
Spring에서는 HttpEntity란 클래스를 제공. 이 클래스의 역할은 Http 통신을 이용하는 통신의 header와 body정보를 저장할 수 있다.
이를 상속받은 클래스가 존재하는데 이게 responseEntity랑 requestEntity가 존재한다.
즉 통신메세지 관련 header와 body의 값들을 하나의 객체로 저장하는 것이 HttpEntity클래스의 객체가 된다.
Request일 경우는 RequestEntity, Response일 경우 ResponseEntity가 하게 된다.

만약 header 값을 변경해줘야 하는 경우
@ResponseBody의 경우는 파라미터로 Response객체를 받아서 이 객체에서 header를 변경해준다.
ResponseEntity의 경우 클래스를 생성한 다음에 객체에서 header값을 변경해줘야 한다.

@PathVariable?
말 그대로 url 경로에 변수를 넣어주는 것이다. Restful 서비스의 uri 형태다.
 




 
